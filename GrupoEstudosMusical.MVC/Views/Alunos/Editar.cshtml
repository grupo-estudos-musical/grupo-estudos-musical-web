@model GrupoEstudosMusical.MVC.Models.AlunoVM

@{
    ViewBag.Title = "Alterar Aluno";
}

@if (Session["nivelAcesso"] != null &&  Session["nivelAcesso"].ToString().Equals("Aluno"))
{
    <div class='col-xs-12'>
        <div class="page-title">
            <div class="pull-left">
                <h1 class="title">Editar Informações</h1>
            </div>
            <div class="pull-right hidden-xs">
                <ol class="breadcrumb">
                    <li>
                        <a href="@Url.Action("VisaoGeral", new { Model.Id})"><i class="fa fa-home"></i>Home</a>
                    </li>
                    <li class="active">
                        <strong>Editar Informações</strong>
                    </li>
                </ol>
            </div>
        </div>
    </div>
}
else
{
    <div class='col-xs-12'>
        <div class="page-title">
            <div class="pull-left">
                <h1 class="title">Alterar um Aluno</h1>
            </div>
            <div class="pull-right hidden-xs">
                <ol class="breadcrumb">
                    <li>
                        <a href="@Url.Action("Index", "Home")}"><i class="fa fa-home"></i>Home</a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Alunos")">Alunos</a>
                    </li>
                    <li>
                        <a href="@Url.Action("VisaoGeral", "Alunos", new { id = Model.Id})">Visão Geral</a>
                    </li>
                    <li class="active">
                        <strong>Editar Aluno</strong>
                    </li>
                </ol>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Editar", "Alunos", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "general_validate", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ImagemUrl)
    @Html.HiddenFor(model => model.UsuarioId)
    <div class="col-lg-12">
        <section class="box ">
            <header class="panel_header">
                <h2 class="title pull-left">Informações Pessoais</h2>
                <div class="actions panel_actions pull-right">
                    <a class="box_toggle fa fa-chevron-down"></a>
                    <a class="box_close fa fa-times"></a>
                </div>
            </header>
            <div class="content-body">
                @Html.Partial("_MensagemErro")
                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <img id="imagemPreview" src="~/Content/ImagensAlunos/@Model.ImagemUrl" class="imagem-preview" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImagemUpload, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.TextBoxFor(model => model.ImagemUpload, new { type = "file", @class = "form-control", accept = "image/*" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control datepicker", @data_format = "dd/mm/yyyy" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NomeResponsavel, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.NomeResponsavel, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoResponsavel, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.DropDownListFor(model => model.TipoResponsavel, new SelectList(ViewBag.TiposResponsaveis, "TipoResponsavelEnum"), new { @class = "form-control m-bot15" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", placeholder = "(99) 9999-9999", @data_mask = "(99) 9999-9999" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", placeholder = "(99) 99999-9999", @data_mask = "(99) 99999-9999" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control", placeholder = "99.999.999-9", @data_mask = "99.999.999-9" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", placeholder = "999.999.999-99", @data_mask = "999.999.999-99" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <div class="col-lg-12">
        <section class="box ">
            <header class="panel_header">
                <h2 class="title pull-left">Informações de Endereço</h2>
                <div class="actions panel_actions pull-right">
                    <a class="box_toggle fa fa-chevron-down"></a>
                    <a class="box_close fa fa-times"></a>
                </div>
            </header>
            <div class="content-body">
                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", placeholder = "99999-999", @data_mask = "99999-999" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Uf, htmlAttributes: new { @class = "form-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Uf, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <div class="pull-right ">
                            <input type="submit" class="btn btn-success" value="Salvar">
                            <!-- <button type="submit" class="btn btn-success">Salvar</button> -->
                            @if (!string.IsNullOrEmpty(ViewBag.ReturnUrl))
                            {
                                <a type="button" class="btn" href="@ViewBag.ReturnUrl">Cancelar</a>
                            }
                            else
                            {
                                <a type="button" class="btn" href="@Url.Action("Index", "Alunos")">Cancelar</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}



@section Styles{
    <link href="~/Content/lib/datepicker/css/datepicker.css" rel="stylesheet" type="text/css" media="screen">
}

@section Scripts{
    <script src="~/Scripts/lib/jquery-validation/js/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/lib/jquery-validation/js/additional-methods.min.js" type="text/javascript"></script>
    <script src="~/Scripts/js/form-validation.js" type="text/javascript"></script>
    <script src="~/Scripts/lib/jquery-validation/js/jquey.validate.pt-br.js" type="text/javascript"></script>
    <script src="~/Scripts/lib/inputmask/min/jquery.inputmask.bundle.min.js" type="text/javascript"></script>
    <script src="~/Scripts/lib/datepicker/js/datepicker.js" type="text/javascript"></script>
    <script src="~/Scripts/js/aluno.js" type="text/javascript"></script>
}