@model GrupoEstudosMusical.MVC.Models.MatriculaVM

@{
    ViewBag.Title = "Processo de Matrícula";
}




<div class='col-xs-12'>
    <div class="page-title">
        <div class="pull-left">
            <h1 class="title">Processo de Matrícula</h1>
        </div>
        <div class="pull-right hidden-xs">
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Home</a>
                </li>
                <li>
                    <a href="@Url.Action("Index", "Alunos")">Alunos</a>
                </li>
                <li>
                    <a href="@Url.Action("Novo")">Cadastrar Aluno</a>
                </li>
                <li class="active">
                    <strong>Matricular Aluno</strong>
                </li>
            </ol>
        </div>
    </div>
</div>

<div class="clearfix"></div>

<div class="col-lg-12">
    <section class="box ">
        <header class="panel_header">
            <h2 class="title pull-left">Processo de Matrícula do(a) Aluno(a) @Model.Aluno.Nome</h2>
            <div class="actions panel_actions pull-right">
                <a class="box_toggle fa fa-chevron-down"></a>
                <a class="box_close fa fa-times"></a>
            </div>
        </header>
        <div class="content-body">
            @Html.Partial("_MensagemErro")
            <div class="row">
                <div class="col-xs-12">

                    @using (Html.BeginForm("Novo", "Matriculas", FormMethod.Post, new { id = "commentForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.AlunoId)
                        @Html.HiddenFor(model => model.Aluno.Bairro)
                        @Html.HiddenFor(model => model.Aluno.Cep)
                        @Html.HiddenFor(model => model.Aluno.Cidade)
                        @Html.HiddenFor(model => model.Aluno.Logradouro)
                        @Html.HiddenFor(model => model.Aluno.Numero)
                        @Html.HiddenFor(model => model.Aluno.Uf)
                        @Html.HiddenFor(model => model.Aluno.Complemento)
                        @Html.HiddenFor(model => model.Aluno.ImagemUrl)
                        @Html.HiddenFor(model => model.Cpf)
                        <div id="pills" class='wizardpills'>
                            <ul class="form-wizard">
                                <li><a href="#pills-tab1" data-toggle="tab"><span>Aluno</span></a></li>
                                <li><a href="#pills-tab2" data-toggle="tab"><span>Documentos</span></a></li>
                                <li><a href="#pills-tab3" data-toggle="tab"><span>Turma</span></a></li>
                                <li><a href="#pills-tab4" data-toggle="tab"><span>Confirmação</span></a></li>
                            </ul>
                            <div id="bar" class="progress active">
                                <div class="progress-bar progress-bar-primary " role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
                            </div>
                            <div class="tab-content">
                                <div class="tab-pane" id="pills-tab1">
                                    <h4>Informações do Aluno</h4>
                                    <p>Confirme as informações do aluno</p><br />
                                    <div class="row">
                                        <div class="col-xs-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.Nome, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.Nome, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.DataNascimento, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.DataNascimento, new { htmlAttributes = new { @class = "form-control datepicker", @data_format = "dd/mm/yyyy", @readonly = "true" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.Telefone, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.Telefone, new { htmlAttributes = new { @class = "form-control", placeholder = "(99) 9999-9999", @data_mask = "(99) 9999-9999", @readonly = "true" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.Celular, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.Celular, new { htmlAttributes = new { @class = "form-control", placeholder = "(99) 99999-9999", @data_mask = "(99) 99999-9999", @readonly = "true" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.Email, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.Rg, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.Rg, new { htmlAttributes = new { @class = "form-control", placeholder = "99.999.999-9", @data_mask = "99.999.999-9", @readonly = "true" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aluno.Cpf, htmlAttributes: new { @class = "form-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Aluno.Cpf, new { htmlAttributes = new { @class = "form-control", placeholder = "999.999.999-99", @data_mask = "999.999.999-99", @readonly = "true" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12">
                                            @Html.ActionLink("Editar Aluno", "Editar", "Alunos", new { id = Model.Aluno.Id, returnUrl = Url.RouteUrl("Matricular", new { idAluno = Model.Aluno.Id }) }, new { @class = "btn btn-primary" })
                                        </div>
                                        <br />
                                    </div>
                                </div>
                                <div class="tab-pane" id="pills-tab2">
                                    <h4>Documentos Apresentados</h4>
                                    <p>Marque os documentos apresentados no momento da matrícula</p><br />
                                    @Html.Partial("_DocumentosApresentados")
                                </div>
                                <div class="tab-pane" id="pills-tab3">
                                    <h4>Módulos Disponíveis</h4>
                                    <p>Escolha um módulo</p><br />
                                    <div class="form-group">
                                        <div class="controls">
                                            <input type="hidden" id="ModuloId" />
                                        </div>
                                    </div>

                                    <div class="modulos">
                                        @{
                                            const int TAMANHO_LINHA = 4;
                                            int quantLinhas = (int)Math.Ceiling((double)Model.Turmas.Count / TAMANHO_LINHA);
                                        }
                                        @for (int pagina = 0; pagina < TAMANHO_LINHA; pagina++)
                                        {
                                            <div class="row">
                                                @{
                                                    var modulosLinha =
                                                        Model.Modulos
                                                        .Skip(TAMANHO_LINHA * pagina)
                                                        .Take(TAMANHO_LINHA);
                                                }
                                                @foreach (var modulo in modulosLinha)
                                                {
                                                    <div class="col-md-3">
                                                        <button type="button" class="btn btn-primary btn-lg btn-border btn-matricula" modulo-id="@modulo.Id" onclick="selecionarModulo(this)">@modulo.Nome</button>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <br /><br />
                                    <h4>Turmas Disponíveis</h4>
                                    <p>Escolha uma turma para o aluno ser matrículado</p><br />
                                    <div class="form-group">
                                        <div class="controls">
                                            @Html.HiddenFor(model => model.TurmaId)
                                            <input type="hidden" id="TurmaNome" />
                                        </div>
                                    </div>

                                    <div id="turmas">
                                        @*@{
                                                quantLinhas = (int)Math.Ceiling((double)Model.Turmas.Count / TAMANHO_LINHA);
                                            }
                                            @for (int pagina = 0; pagina < quantLinhas; pagina++)
                                            {
                                                <div class="row">
                                                    @{
                                                        var turmasLinha =
                                                            Model.Turmas
                                                            .Skip(TAMANHO_LINHA * pagina)
                                                            .Take(TAMANHO_LINHA);
                                                    }
                                                    @foreach (var turma in turmasLinha)
                                                    {

                                                        var turmaExistente = Model.TurmasMatriculadas.Any(t => t.Id == turma.Id);
                                                        var classeBotao = turmaExistente ? "btn-danger" : "btn-primary";
                                                        var desabilitar = turmaExistente ? "disabled='disabled'" : "";

                                                        <div class="col-md-3">
                                                            <button type="button" class="btn @classeBotao btn-lg btn-border btn-matricula" turma-id="@turma.Id" turma-nome="@turma.Nome" onclick="selecionarTurma(this)" @desabilitar>
                                                                @turma.Nome <br /><br /> Alunos @turma.Matriculas.Count/@turma.QuantidadeAlunos
                                                            </button>
                                                        </div>
                                                    }
                                                </div>
                                                <br />
                                            }*@
                                    </div>

                                    <div class="clearfix"></div>
                                </div>
                                <div class="tab-pane" id="pills-tab4">
                                    <h4>Confirmar Informações de Matrícula</h4>
                                    <p>Confirme as informações antes de realizar a matrícula</p>
                                    <br />

                                    <h3>Aluno: <span id="nome-aluno">Nome do Aluno</span></h3>
                                    <h3>Turma: <span id="nome-turma">Nome da Turma</span></h3>
                                    <br />
                                </div>
                                <ul class="pager wizard">
                                    <li class="previous"><a href="javascript:;">Voltar</a></li>
                                    <li class="next">
                                        <a href="javascript:;" onclick="exibirCofirmacao(this)">Avançar</a>
                                    </li>
                                    @*<li class="finish"><a href="javascript:;">Finish</a></li>*@
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>

<!-- modal start -->
<div class="modal fade col-xs-12" id="modal-confirmar-matricula" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Matrícula Pendente</h4>
            </div>
            <div class="modal-body">
                Não foram apresentados todos os documentos, por isso a matrícula do aluno ficará pendente. Dejesa realmente matricular aluno?
            </div>
            <div class="modal-footer">
                <button data-dismiss="modal" class="btn btn-default" type="button">Fechar</button>
                <button class="btn btn-warning" type="button" id="btn-confirmar-matricula" onclick="confirmarModal()"> Confirmar</button>
            </div>
        </div>
    </div>
</div>
<!-- modal end -->
@section styles{
    <link href="~/Content/lib/jquery-ui/smoothness/jquery-ui.min.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="~/Content/lib/switchery/dist/switchery.css" rel="stylesheet" type="text/css" media="screen" />
}

@section scripts{
    <script src="~/Scripts/lib/jquery-validation/js/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/lib/bootstrap-wizard/jquery.bootstrap.wizard.min.js" type="text/javascript"></script>
    <script src="~/Scripts/js/form-validation.js" type="text/javascript"></script>
    <script src="~/Scripts/lib/switchery/dist/switchery.js" type="text/javascript"></script>
    <script src="~/Scripts/js/matricula.js" type="text/javascript"></script>
    @if (ViewBag.PossuiRestricao == true)
    {
        <script type="text/javascript">
            swal("Atenção", "Este aluno foi reprovado, deste modo a principio será disponibilizado para a matrícula, somente turmas do módulo retido", "warning");
        </script>
    }
}
